#ifndef GRIFFIN_H
#define GRIFFIN_H

#include "blst.h"
#include <stdlib.h>
#include <string.h>

// NB: Implement Griffin only for t = 3, therefore the context is of size 3
#define GRIFFIN_STATE_SIZE 3

#define GRIFFIN_NB_ROUNDS 12

static const blst_fr ALPHA_2 = {
    .l = {576022510355459922ul, 7545584689107829622ul, 9368093138933565502ul,
          738093319875489843ul}};

static const blst_fr BETA_2 = {
    .l = {1817834949700520210ul, 11812021676268378445ul, 5859894876965346393ul,
          619142080164803191ul}};

static blst_fr GRIFFIN_ROUND_CONSTANTS[GRIFFIN_NB_ROUNDS * 3] = {
    {.l = {4276167144443364612ul, 5708246148331974409ul, 14107465417894127201ul,
           6813017262718822353ul}},
    {.l = {15730633090072790921ul, 12434156866826875663ul,
           17671333728417836817ul, 6695742914417950777ul}},
    {.l = {4292282740134477092ul, 2124772282766825121ul, 13663857309869654304ul,
           738196192715613092ul}},
    {.l = {4483157054184025905ul, 12590165177004774422ul, 8820203743529682129ul,
           1985150123570434990ul}},
    {.l = {11157394701268158974ul, 9650166278289720506ul, 8838381049719832426ul,
           3115005140406656320ul}},
    {.l = {552127238606299402ul, 5941840546470785732ul, 14970223672812265154ul,
           3927455868486800387ul}},
    {.l = {303764900991310984ul, 4257205952178707129ul, 5616493599970992182ul,
           2790508038800280629ul}},
    {.l = {4518183251151147154ul, 493761280029164451ul, 18040253702617465558ul,
           357924479433968786ul}},
    {.l = {8118150497581582110ul, 4251719765187228843ul, 4853643008452495722ul,
           3179711867287876210ul}},
    {.l = {10928992379538143612ul, 9194793025802347289ul, 2902138178638597875ul,
           164540792906937880ul}},
    {.l = {9712247327846254618ul, 764471908725263532ul, 544208098912578667ul,
           4678258907165798390ul}},
    {.l = {17863388496542312864ul, 10167910037711881875ul,
           9360336546694737770ul, 1588671332223485036ul}},
    {.l = {3367901602742765480ul, 16237491030477632597ul,
           17268372449613472065ul, 4495415025717853708ul}},
    {.l = {16098078072273571816ul, 13912378569005676102ul,
           13644491939900583541ul, 1289651879300151956ul}},
    {.l = {3194680472846087712ul, 16892287720351549709ul, 6306151095262329141ul,
           546382471607916853ul}},
    {.l = {2088409260964203881ul, 15114924971649673207ul,
           11188339931497372722ul, 2933045242012495739ul}},
    {.l = {17423185986025049182ul, 17498016759774023156ul,
           1880555991156707987ul, 7615575426479675387ul}},
    {.l = {13944453279426868820ul, 3199569853143026356ul, 9732144821556739547ul,
           5694921916073249885ul}},
    {.l = {4112609145235048995ul, 9907663950874395420ul, 13307249736055850817ul,
           6210479792944185810ul}},
    {.l = {13813441255710581471ul, 18178494198770573657ul,
           7090882859423198421ul, 3962034798603554327ul}},
    {.l = {14096660871075537361ul, 6618871587511171097ul,
           17400172729701804513ul, 5159712228796392103ul}},
    {.l = {4315264514690791383ul, 3527341715651761605ul, 17222057564590632413ul,
           905499993504197419ul}},
    {.l = {13816661226948476013ul, 3696895408791378312ul, 8177897973017280514ul,
           1688887094619602564ul}},
    {.l = {4361626750504545611ul, 17263114125596425433ul, 6109859588829295205ul,
           631366276318408160ul}},
    {.l = {894162713936578272ul, 4793204545827499267ul, 11962412050854769764ul,
           7768578520576128367ul}},
    {.l = {9523899786120605310ul, 18366185798251569833ul,
           13637796280988643907ul, 4283384705591815232ul}},
    {.l = {18412593381015839340ul, 6044752545678726769ul,
           15535128546143657975ul, 6693281290447150263ul}},
    {.l = {8115931072559423864ul, 15918060197832233841ul,
           10487706867919123161ul, 4634204766574584882ul}},
    {.l = {11646545614455848707ul, 3896161403591945944ul, 7033916724269232036ul,
           8311845086624733385ul}},
    {.l = {16279862644375200905ul, 14574373482373256151ul, 547404905385282330ul,
           1625422232776700270ul}},
    {.l = {7582669979003530942ul, 298600339072336932ul, 4806836541297457378ul,
           5085573050476289175ul}},
    {.l = {7063912241218234663ul, 9399394237255168402ul, 17032671947284390705ul,
           3649618455068091590ul}},
    {.l = {15201992950100907169ul, 1563563080910579497ul, 985744632682717256ul,
           8030740144410488059ul}},
    {.l = {0ul, 0ul, 0ul, 0ul}},
    {.l = {0ul, 0ul, 0ul, 0ul}},
    {.l = {0ul, 0ul, 0ul, 0ul}},
};

void griffin_apply_permutation(blst_fr *ctxt);

#endif
